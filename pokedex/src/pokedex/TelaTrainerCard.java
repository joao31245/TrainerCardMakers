/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pokedex;

import java.sql.*;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author joao1
 */
public class TelaTrainerCard extends javax.swing.JFrame {

    /**
     * Creates new form TelaTrainerCard
     */
    // Declarando objetos da classe.
    private String iDTrainer;
    public TelaTrainerCard() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblChooseFirst = new javax.swing.JLabel();
        lblChoosetwo = new javax.swing.JLabel();
        lblChooseThree = new javax.swing.JLabel();
        lblChooseFourth = new javax.swing.JLabel();
        lblChooseFive = new javax.swing.JLabel();
        lblChooseSixth = new javax.swing.JLabel();
        lblSerenaOrRed = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnMostrarCard = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        lblChooseFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spritespokemom/001.gif"))); // NOI18N
        jPanel1.add(lblChooseFirst);
        lblChooseFirst.setBounds(260, 120, 190, 130);

        lblChoosetwo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblChoosetwo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spritespokemom/002.gif"))); // NOI18N
        jPanel1.add(lblChoosetwo);
        lblChoosetwo.setBounds(465, 125, 190, 130);

        lblChooseThree.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblChooseThree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spritespokemom/003.gif"))); // NOI18N
        lblChooseThree.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(lblChooseThree);
        lblChooseThree.setBounds(660, 125, 190, 130);

        lblChooseFourth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spritespokemom/004.gif"))); // NOI18N
        jPanel1.add(lblChooseFourth);
        lblChooseFourth.setBounds(260, 270, 190, 130);

        lblChooseFive.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spritespokemom/005.gif"))); // NOI18N
        jPanel1.add(lblChooseFive);
        lblChooseFive.setBounds(460, 270, 190, 130);

        lblChooseSixth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spritespokemom/006.gif"))); // NOI18N
        jPanel1.add(lblChooseSixth);
        lblChooseSixth.setBounds(660, 275, 190, 130);
        jPanel1.add(lblSerenaOrRed);
        lblSerenaOrRed.setBounds(20, 110, 230, 360);

        lblID.setFont(new java.awt.Font("Sitka Display", 1, 36)); // NOI18N
        jPanel1.add(lblID);
        lblID.setBounds(490, 50, 320, 60);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(242, 203, 5));
        jLabel3.setText("Menu");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3);
        jLabel3.setBounds(30, 10, 50, 25);

        btnMostrarCard.setBackground(new java.awt.Color(153, 202, 255));
        btnMostrarCard.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnMostrarCard.setForeground(new java.awt.Color(51, 153, 255));
        btnMostrarCard.setText("Mostrar card");
        btnMostrarCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarCardActionPerformed(evt);
            }
        });
        jPanel1.add(btnMostrarCard);
        btnMostrarCard.setBounds(690, 470, 160, 50);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pokedex/cardBackgroundJC1.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, -20, 870, 650);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        new TelaMenu().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void btnMostrarCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarCardActionPerformed

        try {
            // Estabelecendo conexão com o banco e criando um 'statement' para realizar comandos sql.
            DatabaseConnection connection = new DatabaseConnection();
            // Chamando metodo de conexão.
            connection.conexao();

            // String com o comaando sql 'select' para coletar todos os dados do treinador especifico.
            String select = "select * from treinadores where id_treinador ='" + this.getiDTrainer() + "'";

            // Execução do comando sql.
            ResultSet resultSet = connection.getStatement().executeQuery(select);

            // Colocando o nome do usuário em exibição na tela.
            this.lblID.setText(this.getiDTrainer());

            // Array para pegar todas as labels.
            javax.swing.JLabel[] labels = {lblChooseFirst, lblChoosetwo,lblChooseThree,
                lblChooseFourth, lblChooseFive, lblChooseSixth};

            // Array com todas as urls dos pokemons a serem adicionados na pagina.
            String[] urls = {
                "/spritespokemom/001.gif",
                "/spritespokemom/002.gif",
                "/spritespokemom/003.gif",
                "/spritespokemom/004.gif",
                "/spritespokemom/005.gif",
                "/spritespokemom/006.gif",
                "/spritespokemom/007.gif",
                "/spritespokemom/008.gif",
                "/spritespokemom/009.gif",
                "/spritespokemom/010.gif",
                "/spritespokemom/011.gif",
                "/spritespokemom/012.gif",
                "/spritespokemom/013.gif",
                "/spritespokemom/014.gif",
                "/spritespokemom/015.gif",
                "/spritespokemom/016.gif",
                "/spritespokemom/017.gif",
                "/spritespokemom/018.gif",
                "/spritespokemom/019.gif",
                "/spritespokemom/020.gif",
                "/spritespokemom/021.gif",
                "/spritespokemom/022.gif",
                "/spritespokemom/023.gif",
                "/spritespokemom/024.gif",
                "/spritespokemom/025.gif",
                "/spritespokemom/026.gif",
                "/spritespokemom/027.gif",
                "/spritespokemom/028.gif",
                "/spritespokemom/029.gif",
                "/spritespokemom/030.gif",
                "/spritespokemom/031.gif",
                "/spritespokemom/032.gif",
                "/spritespokemom/033.gif",
                "/spritespokemom/034.gif",
                "/spritespokemom/035.gif",
                "/spritespokemom/036.gif",
                "/spritespokemom/037.gif",
                "/spritespokemom/038.gif",
                "/spritespokemom/039.gif",
                "/spritespokemom/040.gif",
                "/spritespokemom/041.gif",
                "/spritespokemom/042.gif",
                "/spritespokemom/043.gif",
                "/spritespokemom/044.gif",
                "/spritespokemom/045.gif",
                "/spritespokemom/046.gif",
                "/spritespokemom/047.gif",
                "/spritespokemom/048.gif",
                "/spritespokemom/049.gif",
                "/spritespokemom/050.gif",
                "/spritespokemom/051.gif",
                "/spritespokemom/052.gif",
                "/spritespokemom/053.gif",
                "/spritespokemom/054.gif",
                "/spritespokemom/055.gif",
                "/spritespokemom/056.gif",
                "/spritespokemom/057.gif",
                "/spritespokemom/058.gif",
                "/spritespokemom/059.gif",
                "/spritespokemom/060.gif",
                "/spritespokemom/061.gif",
                "/spritespokemom/062.gif",
                "/spritespokemom/063.gif",
                "/spritespokemom/064.gif",
                "/spritespokemom/065.gif",
                "/spritespokemom/066.gif",
                "/spritespokemom/067.gif",
                "/spritespokemom/068.gif",
                "/spritespokemom/069.gif",
                "/spritespokemom/070.gif",
                "/spritespokemom/071.gif",
                "/spritespokemom/072.gif",
                "/spritespokemom/073.gif",
                "/spritespokemom/074.gif",
                "/spritespokemom/075.gif",
                "/spritespokemom/076.gif",
                "/spritespokemom/077.gif",
                "/spritespokemom/078.gif",
                "/spritespokemom/079.gif",
                "/spritespokemom/080.gif",
                "/spritespokemom/081.gif",
                "/spritespokemom/082.gif",
                "/spritespokemom/083.gif",
                "/spritespokemom/084.gif",
                "/spritespokemom/085.gif",
                "/spritespokemom/086.gif",
                "/spritespokemom/087.gif",
                "/spritespokemom/088.gif",
                "/spritespokemom/089.gif",
                "/spritespokemom/090.gif",
                "/spritespokemom/091.gif",
                "/spritespokemom/092.gif",
                "/spritespokemom/093.gif",
                "/spritespokemom/094.gif",
                "/spritespokemom/095.gif",
                "/spritespokemom/096.gif",
                "/spritespokemom/097.gif",
                "/spritespokemom/098.gif",
                "/spritespokemom/099.gif",
                "/spritespokemom/100.gif",
                "/spritespokemom/101.gif",
                "/spritespokemom/102.gif",
                "/spritespokemom/103.gif",
                "/spritespokemom/104.gif",
                "/spritespokemom/105.gif",
                "/spritespokemom/106.gif",
                "/spritespokemom/107.gif",
                "/spritespokemom/108.gif",
                "/spritespokemom/109.gif",
                "/spritespokemom/110.gif",
                "/spritespokemom/111.gif",
                "/spritespokemom/112.gif",
                "/spritespokemom/113.gif",
                "/spritespokemom/114.gif",
                "/spritespokemom/115.gif",
                "/spritespokemom/116.gif",
                "/spritespokemom/117.gif",
                "/spritespokemom/118.gif",
                "/spritespokemom/119.gif",
                "/spritespokemom/120.gif",
                "/spritespokemom/121.gif",
                "/spritespokemom/122.gif",
                "/spritespokemom/123.gif",
                "/spritespokemom/124.gif",
                "/spritespokemom/125.gif",
                "/spritespokemom/126.gif",
                "/spritespokemom/127.gif",
                "/spritespokemom/128.gif",
                "/spritespokemom/129.gif",
                "/spritespokemom/130.gif",
                "/spritespokemom/131.gif",
                "/spritespokemom/132.gif",
                "/spritespokemom/133.gif",
                "/spritespokemom/134.gif",
                "/spritespokemom/135.gif",
                "/spritespokemom/136.gif",
                "/spritespokemom/137.gif",
                "/spritespokemom/138.gif",
                "/spritespokemom/139.gif",
                "/spritespokemom/140.gif",
                "/spritespokemom/141.gif",
                "/spritespokemom/142.gif",
                "/spritespokemom/143.gif",
                "/spritespokemom/144.gif",
                "/spritespokemom/145.gif",
                "/spritespokemom/146.gif",
                "/spritespokemom/147.gif",
                "/spritespokemom/148.gif",
                "/spritespokemom/149.gif",
                "/spritespokemom/150.gif",
                "/spritespokemom/151.gif"
            };

            // Array com todos os pokemons de kanto.

            String[] kantoPokemon = {
                "Bulbasaur",
                "Ivysaur",
                "Venusaur",
                "Charmander",
                "Charmeleon",
                "Charizard",
                "Squirtle",
                "Wartortle",
                "Blastoise",
                "Caterpie",
                "Metapod",
                "Butterfree",
                "Weedle",
                "Kakuna",
                "Beedrill",
                "Pidgey",
                "Pidgeotto",
                "Pidgeot",
                "Rattata",
                "Raticate",
                "Spearow",
                "Fearow",
                "Ekans",
                "Arbok",
                "Pikachu",
                "Raichu",
                "Sandshrew",
                "Sandslash",
                "Nidoran♀",
                "Nidorina",
                "Nidoqueen",
                "Nidoran♂",
                "Nidorino",
                "Nidoking",
                "Clefairy",
                "Clefable",
                "Vulpix",
                "Ninetales",
                "Jigglypuff",
                "Wigglytuff",
                "Zubat",
                "Golbat",
                "Oddish",
                "Gloom",
                "Vileplume",
                "Paras",
                "Parasect",
                "Venonat",
                "Venomoth",
                "Diglett",
                "Dugtrio",
                "Meowth",
                "Persian",
                "Psyduck",
                "Golduck",
                "Mankey",
                "Primeape",
                "Growlithe",
                "Arcanine",
                "Poliwag",
                "Poliwhirl",
                "Poliwrath",
                "Abra",
                "Kadabra",
                "Alakazam",
                "Machop",
                "Machoke",
                "Machamp",
                "Bellsprout",
                "Weepinbell",
                "Victreebel",
                "Tentacool",
                "Tentacruel",
                "Geodude",
                "Graveler",
                "Golem",
                "Ponyta",
                "Rapidash",
                "Slowpoke",
                "Slowbro",
                "Magnemite",
                "Magneton",
                "Farfetch'd",
                "Doduo",
                "Dodrio",
                "Seel",
                "Dewgong",
                "Grimer",
                "Muk",
                "Shellder",
                "Cloyster",
                "Gastly",
                "Haunter",
                "Gengar",
                "Onix",
                "Drowzee",
                "Hypno",
                "Krabby",
                "Kingler",
                "Voltorb",
                "Electrode",
                "Exeggcute",
                "Exeggutor",
                "Cubone",
                "Marowak",
                "Hitmonlee",
                "Hitmonchan",
                "Lickitung",
                "Koffing",
                "Weezing",
                "Rhyhorn",
                "Rhydon",
                "Chansey",
                "Tangela",
                "Kangaskhan",
                "Horsea",
                "Seadra",
                "Goldeen",
                "Seaking",
                "Staryu",
                "Starmie",
                "Mr. Mime",
                "Scyther",
                "Jynx",
                "Electabuzz",
                "Magmar",
                "Pinsir",
                "Tauros",
                "Magikarp",
                "Gyarados",
                "Lapras",
                "Ditto",
                "Eevee",
                "Vaporeon",
                "Jolteon",
                "Flareon",
                "Porygon",
                "Omanyte",
                "Omastar",
                "Kabuto",
                "Kabutops",
                "Aerodactyl",
                "Snorlax",
                "Articuno",
                "Zapdos",
                "Moltres",
                "Dratini",
                "Dragonair",
                "Dragonite",
                "Mewtwo",
                "Mew"
            };

            /*O programa confere se há resultado na busca do 'resultSet'
            caso sim será executado uma condição e um looping.*/
            if(resultSet.next()) {
                // Puxando do banco de dados os dados de sexo do usuário.
                String sexo = resultSet.getString("sexo");

                /*Condição que verifica se o sexo é Feminino ou Masculino e altera o
                icone conforme for.
                Caso ocorra algum erro, vai mostrar uma mensagem de erro especifica.*/
                if(sexo.equals("F")) {
                    try {
                        lblSerenaOrRed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/serena/miniserena.png")));
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "erro ao inserir a imagem.");
                    }

                } else {
                    try {
                        lblSerenaOrRed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/serena/minired.png")));
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "erro ao inserir a imagem.");
                    }

                }
                // Array que puxa os dados de escolhas dos pokemons no banco de dados.
                String[] escolhas = {String.valueOf(resultSet.getString("primeiraEscolha")),
                    String.valueOf(resultSet.getString("segundaEscolha")),
                    String.valueOf(resultSet.getString("terceiraEscolha")),
                    String.valueOf(resultSet.getString("quartaEscolha")),
                    String.valueOf(resultSet.getString("quintaEscolha")),
                    String.valueOf(resultSet.getString("sextaEscolha"))};
                // Array com dois contadores, um para contar as labels e as escolhas e outro para contar os pokemons e urls.
                // int[] contadores = {0,0};
                /*O looping verifica se o pokemom escolhido no banco de dados é igual
                a algum pokemom do array 'kantoPokemom', caso seja ele adiciona esses pokemons
                na label reseta o contador de pokemons, para comparar a proxima escolha
                e então passa para a proxima escolha. Caso não seja igual ele passa para
                o proximo pokemom.*/
                /*while (contadores[0] < labels.length) {
                    if (kantoPokemon[contadores[1]].equals(escolhas[contadores[0]])) {
                        labels[contadores[0]].setIcon(new javax.swing.ImageIcon(getClass().getResource(urls[contadores[1]])));
                        contadores[1] = 0;
                        contadores[0]++;
                    } else {
                        contadores[1]++;
                    }
                }*/
                for (int contadorLabels = 0; contadorLabels < labels.length; contadorLabels++) {
                    for (int contadorPokemons = 0; contadorPokemons < kantoPokemon.length; contadorPokemons++) {
                        try {
                             if (kantoPokemon[contadorPokemons].equals(escolhas[contadorLabels])) {
                            labels[contadorLabels].setIcon(new javax.swing.ImageIcon(getClass().getResource(urls[contadorPokemons])));
                            break; // Sai do loop interno quando uma correspondência é encontrada
                        }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, "Erro ao inserir icone de pokemom");
                        }
                    }
                }
            }

        } catch (Exception e) {
            // Caso a conexão falhe mostre uma mensagem do respectivo erro.
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnMostrarCardActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaTrainerCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaTrainerCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaTrainerCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaTrainerCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaTrainerCard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMostrarCard;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblChooseFirst;
    private javax.swing.JLabel lblChooseFive;
    private javax.swing.JLabel lblChooseFourth;
    private javax.swing.JLabel lblChooseSixth;
    private javax.swing.JLabel lblChooseThree;
    private javax.swing.JLabel lblChoosetwo;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblSerenaOrRed;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the iDTrainer
     */
    public String getiDTrainer() {
        return iDTrainer;
    }

    /**
     * @param iDTrainer the iDTrainer to set
     */
    public void setiDTrainer(String iDTrainer) {
        this.iDTrainer = iDTrainer;
    }
}
